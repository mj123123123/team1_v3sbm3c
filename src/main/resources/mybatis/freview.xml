<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dev.mvc.freview.FreviewDAOInter">
	<!-- 등록한 레코드 갯수 1 리턴, #{reviewno}: public int getReviewno() 호출됨 -->
	<insert id="create" parameterType="dev.mvc.freview.FreviewVO">
		INSERT INTO freview(reviewno, contentsno, memberno, nickname, title, content, pwd, rdate, cnt, word,
								file1, file1saved, thumb1, size1)
		VALUES(review_seq.nextval, #{contentsno}, #{memberno}, #{nickname}, #{title}, #{content}, #{pwd},
					sysdate, #{cnt}, #{word}, #{file1}, #{file1saved}, #{thumb1}, #{size1})
	</insert>

	<!-- 모든 컨텐츠의 등록된 리뷰 목록 -->
	<select id="list_all" resultType="dev.mvc.freview.FreviewVO">
		SELECT reviewno, contentsno, memberno, nickname, title, content, pwd, rdate, cnt, word,
								file1, file1saved, thumb1, size1
		FROM freview
		ORDER BY reviewno DESC
	</select>

	<!-- 특정 컨텐츠의 등록된 리뷰 목록 -->
	<select id="list_by_contentsno" resultType="dev.mvc.freview.FreviewVO" parameterType="int">
		SELECT reviewno, contentsno, memberno, nickname, title, content, pwd, rdate, cnt, word,
								file1, file1saved, thumb1, size1
		FROM freview
		WHERE contentsno = #{contentsno}
		ORDER BY reviewno DESC
	</select>

	<!-- 일반적인 조회 -->
	<select id="read" resultType="dev.mvc.freview.FreviewVO" parameterType="int">
		SELECT reviewno, contentsno, memberno, nickname, title, content, pwd, rdate, cnt, word,
								file1, file1saved, thumb1, size1, map
		FROM freview
		WHERE reviewno = #{reviewno}
	</select>

	<!-- map 등록, 수정, 삭제, HashMap: VO 클래스는 변수가 너무 많아서 메모리 낭비가 발생함으로, 보통 3개 이하의 적은 변수만 전달하는 경우 HashMap 사용 권장 -->
	<update id="map" parameterType="HashMap">
		UPDATE freview SET map=#{map} WHERE reviewno=#{reviewno}
	</update>

	<!-- 컨텐츠별 검색 목록 -->
	<select id="list_by_contentsno_search" resultType="dev.mvc.freview.FreviewVO" parameterType="HashMap">
		SELECT reviewno, contentsno, memberno, nickname, title, content, pwd, rdate, cnt, word,
								file1, file1saved, thumb1, size1, map
		FROM freview
		<choose>
			<when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
				WHERE contentsno=#{contentsno}
			</when>
			<otherwise> <!-- 검색하는 경우 -->
				WHERE contentsno=#{contentsno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%'
				OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%'
				OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
			</otherwise>
		</choose>
		ORDER BY reviewno DESC
	</select>

	<!-- 카테고리별 검색 레코드 갯수 -->
	<select id="search_count" resultType="int" parameterType="HashMap">
		SELECT COUNT(*) as cnt
		FROM freview
		<choose>
			<when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
				WHERE contentsno=#{contentsno}
			</when>
			<otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
				WHERE contentsno=#{contentsno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%'
				OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%'
				OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
			</otherwise>
		</choose>
	</select>

	<!-- 카테고리별 검색 + 페이징 목록 -->
	<select id="list_by_contentsno_search_paging" resultType="dev.mvc.freview.FreviewVO" parameterType="dev.mvc.freview.FreviewVO">
		SELECT reviewno, contentsno, memberno, nickname, title, content, pwd, rdate, cnt, word,
								file1, file1saved, thumb1, size1, map r
		FROM (
		SELECT reviewno, contentsno, memberno, nickname, title, content, pwd, rdate, cnt, word,
								file1, file1saved, thumb1, size1, map, rownum as r
		FROM (
		SELECT reviewno, contentsno, memberno, nickname, title, content, pwd, rdate, cnt, word,
								file1, file1saved, thumb1, size1, map
		FROM freview
		<choose>                                       
			<when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
				WHERE contentsno=#{contentsno}
			</when>
			<otherwise>
				WHERE contentsno=#{contentsno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%'
				OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%'
				OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
			</otherwise>
		</choose>
		ORDER BY reviewno DESC
		)
		)
		WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>

		<!-- 1 page: WHERE r >= 1 AND r <= 10; 2 page: WHERE r >= 11 AND r <= 20; 3 page: WHERE r >= 21 AND r <= 30; -->
	</select>


</mapper>